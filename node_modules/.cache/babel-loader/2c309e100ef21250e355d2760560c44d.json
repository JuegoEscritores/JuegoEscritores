{"ast":null,"code":"import { StorageService } from \"../../services/save.local.storage\";\nimport { Keys } from \"../../keys\";\nexport class InitialMap {\n  constructor() {\n    this.storageService = new StorageService();\n    this.initialSpawn = {\n      i: 1,\n      j: 1\n    };\n    this.initialMapn  }\n\n  /**\n   * Save the initial map and the initial spawn coordinates.\n   * @constructor\n   */\n  saveInitialMap() {\n    this.storageService.set(Keys.MAP, this.initialMap);\n    this.storageService.set(Keys.SPAWN, this.initialSpawn);\n  }\n\n  getInitialMap() {\n    return this.initialMap;\n  }\n\n  getInitialSpawn() {\n    return this.initialSpawn;\n  }\n\n  saveMap(i, j, value) {\n    let map = this.storageService.get(Keys.MAP);\n    map[i][j] = value;\n    this.storageService.set(Keys.MAP, map);\n  }\n\n}","map":{"version":3,"sources":["/home/ribolost/Documentos/Proyectos/table-mark/src/pages/tableGame/map.tsx"],"names":["StorageService","Keys","InitialMap","storageService","initialSpawn","i","j","initialMap","saveInitialMap","set","MAP","SPAWN","getInitialMap","getInitialSpawn","saveMap","value","map","get"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {StorageService} from \"../../services/save.local.storage\";\nimport {Keys} from \"../../keys\";\n\nexport class InitialMap {\n    storageService = new StorageService();\n    initialSpawn = {i: 1, j: 1};\n    initialMap = [\n        ['*', 'S', '*', ' ', ' ', ' ', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*'],\n        ['*', ' ', '*', ' ', ' ', ' ', '3', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*'],\n        ['*', ' ', '*', ' ', ' ', 'L', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', ' ', ' ', '*'],\n        ['*', ' ', '*', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*'],\n        ['*', ' ', '*', '2', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*'],\n        ['*', ' ', '*', '*', ' ', ' ', '*', '*', '*', '*', '*', '*', '*', '*', 'L', '*', '*', '*', '*', ' ', ' ', '*'],\n        ['*', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#'],\n        ['*', ' ', '1', '#', '#', 'L', '*', ' ', ' ', ' ', ' ', ' ', '*', '*', ' ', '*', '*', ' ', ' ', '#', 'H', 'H'],\n        ['*', ' ', '#', 'H', 'H', 'L', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '#', 'H', 'H', 'H'],\n        ['H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'O', '#', '#', '#', '#', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H']\n    ];\n\n    /**\n     * Save the initial map and the initial spawn coordinates.\n     * @constructor\n     */\n    saveInitialMap() {\n        this.storageService.set(Keys.MAP, this.initialMap);\n        this.storageService.set(Keys.SPAWN, this.initialSpawn);\n    }\n\n    getInitialMap() {\n        return this.initialMap;\n    }\n\n    getInitialSpawn() {\n        return this.initialSpawn;\n    }\n    saveMap(i: number, j: number, value:string){\n        let map = this.storageService.get(Keys.MAP);\n        map[i][j] = value;\n        this.storageService.set(Keys.MAP, map);\n    }\n}"]},"metadata":{},"sourceType":"module"}