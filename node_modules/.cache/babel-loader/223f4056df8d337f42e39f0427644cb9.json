{"ast":null,"code":"var _jsxFileName = \"/home/ribolost/Documentos/Proyectos/table-mark/src/pages/inputScore/inputScore.tsx\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Keys } from \"../../keys\";\nimport { User } from '../../models/user';\nimport { StorageService } from \"../../services/save.local.storage\";\nexport const InputScore = props => {\n  const history = useHistory();\n  const [inputScore, setInputScore] = useState(-1);\n  let user = User;\n  const storageService = new StorageService();\n  const lvl = props.location.state.level;\n\n  const handleButton = () => {\n    if (inputScore && inputScore > 0) {\n      user = storageService.get(Keys.USER);\n      user.currentLevel = lvl;\n      let data = {\n        user: user,\n        level: lvl\n      };\n\n      if (true) {\n        let scores = user.score;\n\n        if (!scores[lvl - 1]) {\n          scores.push({\n            \"level\": lvl,\n            \"score\": inputScore\n          });\n        } else {\n          scores[lvl - 1][\"level\"] = lvl;\n          scores[lvl - 1][\"score\"] = inputScore;\n        }\n\n        storageService.set(Keys.USER, user);\n        storageService.set(Keys.IS_CHANGE_INPUT, true);\n        history.push(Keys.PAGE_TABLE_GAME);\n      } else {\n        setTimeout(() => {\n          alert('No se pudo enviar el mensaje por un fallo en conexión de internet.\\nSi el problema persiste comunícalo.');\n        }, 1000);\n        storageService.set(Keys.IS_CHANGE_INPUT, false);\n      }\n    } else {\n      storageService.set(Keys.IS_CHANGE_INPUT, false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"id-input\",\n    className: \"inputGroup inputGroup2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"\\xBFCu\\xE1l fue tu puntaje en el nivel: \", lvl, \"?\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"nombre_usuario\",\n    className: \"password\",\n    onChange: e => {\n      setInputScore(e.target.valueAsNumber);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"div-button\",\n    className: \"inputGroup inputGroup3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"guardar-puntaje\",\n    onClick: handleButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Guardar puntaje\")))));\n};","map":{"version":3,"sources":["/home/ribolost/Documentos/Proyectos/table-mark/src/pages/inputScore/inputScore.tsx"],"names":["React","useState","useHistory","Keys","User","StorageService","InputScore","props","history","inputScore","setInputScore","user","storageService","lvl","location","state","level","handleButton","get","USER","currentLevel","data","scores","score","push","set","IS_CHANGE_INPUT","PAGE_TABLE_GAME","setTimeout","alert","e","target","valueAsNumber"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {Keys} from \"../../keys\";\nimport {User} from '../../models/user';\nimport {StorageService} from \"../../services/save.local.storage\";\nimport {SendEmail} from \"../../services/send.email\";\n\n\nexport const InputScore = (props: any) => {\n    const history = useHistory();\n    const [inputScore, setInputScore] = useState(-1);\n    let user = User;\n    const storageService = new StorageService();\n    const lvl = props.location.state.level;\n    const handleButton = () => {\n        if (inputScore && inputScore > 0) {\n            user = storageService.get(Keys.USER);\n            user.currentLevel = lvl;\n            let data = {user: user, level: lvl};\n            if (true) {\n                let scores = user.score;\n                if (!scores[lvl - 1]) {\n                    scores.push({\"level\": lvl, \"score\": inputScore});\n                } else {\n                    scores[lvl - 1][\"level\"] = lvl;\n                    scores[lvl - 1][\"score\"] = inputScore;\n                }\n                storageService.set(Keys.USER, user);\n                storageService.set(Keys.IS_CHANGE_INPUT, true);\n                history.push(Keys.PAGE_TABLE_GAME);\n            } else {\n                setTimeout(() => {\n                    alert('No se pudo enviar el mensaje por un fallo en conexión de internet.\\nSi el problema persiste comunícalo.');\n                }, 1000);\n                storageService.set(Keys.IS_CHANGE_INPUT, false);\n            }\n        } else {\n            storageService.set(Keys.IS_CHANGE_INPUT, false);\n        }\n    }\n\n    return <>\n        <div className=\"container-all\">\n            <form>\n                <div id=\"id-input\" className=\"inputGroup inputGroup2\">\n                    <label>¿Cuál fue tu puntaje en el nivel: {lvl}?</label>\n                    <input type=\"number\" id=\"nombre_usuario\" className=\"password\"\n                           onChange={(e) => {\n                               setInputScore(e.target.valueAsNumber);\n                           }}/>\n                </div>\n                <div id=\"div-button\" className=\"inputGroup inputGroup3\">\n                    <button id=\"guardar-puntaje\" onClick={handleButton}>\n                        Guardar puntaje\n                    </button>\n                </div>\n            </form>\n        </div>\n    </>\n}"]},"metadata":{},"sourceType":"module"}