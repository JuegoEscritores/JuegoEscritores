{"ast":null,"code":"var _jsxFileName = \"/home/ribolost/Documentos/Proyectos/table-mark/src/pages/tableGame/tableGame.tsx\";\nimport React, { useEffect } from 'react';\nimport './tableGame.scss';\nimport { StorageService } from \"../../services/save.local.storage\";\nimport { Keys } from \"../../keys\";\nimport { useHistory } from \"react-router-dom\";\nimport { FileDownloader } from \"../../services/file.downloader.service\";\nimport { InitialMap } from \"./map\";\nimport level from '../../mocks/levels.json';\nimport { FooterComponent } from \"../../components/footer/footer.component\";\nconst storageService = new StorageService();\nconst rows = 10;\nconst columns = 23;\nexport const TableGame = props => {\n  const history = useHistory();\n  const storageService = new StorageService();\n  const map = new InitialMap();\n  useEffect(() => {\n    let user;\n\n    if (user = storageService.get(Keys.USER)) {\n      if (user.icon !== \"\") {\n        initializeGame();\n      } else {\n        setTimeout(() => {\n          alert('No has elegido un autor, por favor elige uno.');\n        }, 1000);\n        console.log(\"No se ha elegido autor\");\n        history.push(Keys.PAGE_CREATE_USER);\n      }\n    } else {\n      setTimeout(() => {\n        alert('No has creado un usuario, por favor crea un usuario para jugar.');\n      }, 10);\n      console.log(\"No hay usuario\");\n      history.push(Keys.PAGE_LOGIN);\n    }\n  }, []);\n\n  const initializeGame = () => {\n    //map.saveInitialMap(); //comentar esta línea, pues se usa para cambios de mapa en pruebas.\n    let file = new FileDownloader(); //file.downloadFile('COMPRENSIONLECTORA_1.zip')\n\n    let b = document.body;\n    let character = document.getElementById('character');\n    let viewBox = document.querySelector('#viewbox');\n    let width;\n    let height;\n\n    if (character instanceof HTMLElement) {\n      width = character.offsetWidth;\n      height = character.offsetHeight;\n      let fps = 30;\n      let allowance = 6;\n      let space = 10;\n      let columns = 10;\n      let rows = 10;\n      let p = Math.floor(character.offsetWidth / columns);\n      let q = allowance * p;\n      let charWidth = width - q;\n      let mapTable = storageService.get(Keys.MAP);\n      let z = new Game(character, viewBox, mapTable, allowance, space, columns, rows, charWidth, width, height, fps, history);\n\n      if (storageService.get(Keys.IS_CHANGE_INPUT)) {\n        let row = storageService.get(Keys.AUX_SPAWN).r;\n        let column = storageService.get(Keys.AUX_SPAWN).c;\n        z.changeSpawn(row, column);\n      } else if (storageService.get(Keys.IS_CHANGE_INPUT) !== null) {\n        setTimeout(() => {\n          alert('No ingresó puntaje para el nivel.');\n        }, 1000);\n      }\n\n      z.initialize();\n    }\n  };\n\n  const list = () => {\n    let list = [];\n    let quarters = [];\n\n    for (let i = 0; i < rows; i++) {\n      quarters = [];\n\n      for (let e = 0; e < columns; e++) {\n        quarters.push( /*#__PURE__*/React.createElement(\"div\", {\n          key: 's' + e + i,\n          className: \"col\",\n          \"data-game-col\": e,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 31\n          }\n        }));\n      }\n\n      list.push( /*#__PURE__*/React.createElement(\"div\", {\n        key: 's' + i,\n        className: \"row\",\n        \"data-game-row\": i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 23\n        }\n      }, quarters));\n    }\n\n    return list;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"screen\",\n    id: \"viewbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, list(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"character hide\",\n    id: \"character\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FooterComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })));\n};\n/**\n * change the spawn by the level coordinates\n * @param r row\n * @param c column\n */\n\nconst changeSpawn = (mapLs, r, c) => {\n  let beforeSpawn = storageService.get(Keys.SPAWN);\n  beforeSpawn = JSON.parse(beforeSpawn);\n  mapLS.saveMap(r, c, 'S');\n  mapLS.saveMap(beforeSpawn.i, beforeSpawn.j, ' ');\n  mapLS.saveNewSpawn(r, c);\n  storageService.set(Keys.IS_CHANGE_INPUT, false);\n};\n\nclass Game {\n  constructor(character, viewbox, map, allowance, space, columns, rows, charWidth, width, height, fps, history) {\n    this.character = void 0;\n    this.viewbox = void 0;\n    this.map = void 0;\n    this.allowance = void 0;\n    this.space = void 0;\n    this.columns = void 0;\n    this.rows = void 0;\n    this.charWidth = void 0;\n    this.width = void 0;\n    this.height = void 0;\n    this.fps = void 0;\n    this.left = void 0;\n    this.top = void 0;\n    this.activeKeyX = void 0;\n    this.activeKeyY = void 0;\n    this.onLand = void 0;\n    this.position = void 0;\n    this.jumpSpeed = void 0;\n    this.hasEvent = void 0;\n    this.scroll = void 0;\n    this.animation = void 0;\n    this.won = void 0;\n    this.dead = void 0;\n    this.history = void 0;\n    this.open = void 0;\n    this.mapLS = new InitialMap();\n    this.character = character;\n    this.viewbox = viewbox;\n    this.map = map;\n    this.allowance = allowance;\n    this.space = space;\n    this.columns = columns;\n    this.rows = rows;\n    this.charWidth = charWidth;\n    this.width = width;\n    this.height = height;\n    this.fps = fps;\n    this.left = 0;\n    this.top = 0;\n    this.activeKeyX = null;\n    this.activeKeyY = null;\n    this.onLand = true;\n    this.position = {\n      x: 0,\n      y: 0\n    };\n    this.jumpSpeed = 0;\n    this.hasEvent = false;\n    this.scroll = 0;\n    this.animation = null;\n    this.won = false;\n    this.dead = false;\n    this.history = history;\n    this.open = false;\n  }\n\n  gameWin() {\n    if (this.won === false) {\n      this.won = true;\n      setTimeout(() => {\n        alert('!Felicidades!\\nHaz logrado pasar todos los niveles.\\nTu puntaje final fue de ');\n      }, 1000);\n    }\n  }\n  /**\n   * What to do when the user is at the level.\n   * @param levelName\n   * @param row\n   * @param column\n   */\n\n\n  inLevel(levelName, row, column) {\n    if (this.dead === false) {\n      //this.character.classList.add('dead');\n      //this.dead = true;\n      //setTimeout(() => {\n      //    alert('Está entrando al nivel...');\n      //}, 1000);\n      //this.map;\n      let levelJson = this.selectorLevel(levelName);\n\n      if (!this.open) {\n        if (levelJson) {\n          switch (levelJson.type) {\n            case Keys.TYPE_ZIP:\n              let fileDownloader = new FileDownloader(); //fileDownloader.downloadFile(levelJson.resource);\n\n              console.log(\"Es un ZIp\");\n              break;\n\n            case Keys.TYPE_EDUCAPLAY:\n              window.open(levelJson.resource);\n              console.log(\"Es una página externa\");\n              break;\n\n            case Keys.TYPE_HTML:\n              break;\n\n            default:\n              console.log(\"Este tipo de juego no existe\");\n              break;\n          }\n\n          let lvl = Number(levelName);\n          this.history.push({\n            pathname: Keys.PAGE_INPUT_SCORE,\n            state: {\n              level: lvl\n            }\n          });\n\n          if (!storageService.get(Keys.IS_CHANGE_INPUT)) {\n            storageService.set(Keys.AUX_SPAWN, {\n              r: row,\n              c: column\n            });\n          }\n\n          this.open = true;\n        }\n      }\n    }\n  }\n  /**\n   * find and return the level in the levels json.\n   * @param levelName\n   */\n\n\n  selectorLevel(levelName) {\n    let levels = level;\n    let lvlJson;\n    levels.forEach(lvl => {\n      if (lvl.level === levelName) {\n        lvlJson = lvl;\n      }\n    });\n    return lvlJson;\n  }\n\n  changeLvl() {\n    this.position.x += 38;\n  }\n\n  collidable(o) {\n    if (o === '*' || o === '#' || o === 'H') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  collision(c, d) {\n    let x = this.position.x;\n    let y = this.position.y;\n    let m = this.map;\n    let w = this.width;\n    let h = this.height;\n    let a = this.allowance;\n    let s = this.space;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n\n    if (d === 'u') {\n      i = Math.floor((y + h - s * 2 + 2 + c) / h);\n      k = Math.floor((y + h - s * 2 + 2 + c) / h);\n    } else if (d === 'd') {\n      i = Math.floor((y + h + c) / h);\n      k = Math.floor((y + h + c) / h);\n    } else if (d === 'l') {\n      j = Math.floor((x + c + a * 2) / w);\n      l = Math.floor((x + c + a * 2) / w);\n    } else if (d === 'r') {\n      j = Math.floor((x + w + c - a * 2) / w);\n      l = Math.floor((x + w + c - a * 2) / w);\n    }\n\n    if (d === 'l' || d === 'r') {\n      i = Math.floor((y + h - s * 2 + 2) / h);\n      k = Math.floor((y + h - 1) / h);\n    } else if (d === 'u' || d === 'd') {\n      j = Math.floor((x + a * 2) / w);\n      l = Math.floor((x + w - a * 2 - 1) / w);\n    }\n\n    let boxName = m[i][j];\n\n    if (boxName === 'X') {\n      console.log(\"Hola\"); //this.inLevel(\"Tipo 1\", i, j);\n    }\n\n    if (!isNaN(Number(boxName)) && boxName !== ' ') {\n      this.inLevel(boxName, i, j);\n    }\n\n    try {\n      let o = boxName;\n      let p = m[k][l];\n\n      if (this.collidable(o) || this.collidable(p)) {\n        return {\n          x: j * w,\n          y: i * h\n        };\n      } else if (o === 'O') {\n        this.gameWin();\n      } else {\n        return null;\n      }\n    } catch (e) {\n      return null;\n    }\n\n    return 0;\n  }\n\n  moveCharacter(d, e) {\n    let a = this.allowance;\n    let w = this.width;\n    let o;\n    o = this.collision(d, e);\n\n    if (o === null) {\n      this.position.x += Math.floor(d);\n    } else {\n      if (e === 'l') {\n        this.position.x = Math.floor(o.x) + w - a * 2;\n      } else if (e === 'r') {\n        this.position.x = Math.floor(o.x) - w + a * 2;\n      }\n    }\n  }\n\n  gravity() {\n    let h = this.height;\n    let s = this.space;\n    let f = Math.floor(h * 0.2);\n    let g = this.jumpSpeed >= 0 ? f : this.jumpSpeed;\n    let p = this.collision(g, 'd');\n\n    if (p === null) {\n      this.onLand = false;\n      this.position.y += g;\n    } else {\n      this.position.y = p.y - h;\n      this.jumpSpeed = 0;\n      this.onLand = true;\n    }\n\n    if (this.activeKeyY !== null && g < 0) {\n      let o = this.collision(g, 'u');\n\n      if (o === null) {\n        this.jumpSpeed += f / 2;\n      } else {\n        this.jumpSpeed = 0;\n        this.position.y = o.y + h - s * 2 + 2;\n      }\n    }\n  }\n\n  renderCharacter() {\n    let c = this.character;\n    c.style.backgroundImage = \"url(\" + storageService.get(Keys.USER).icon.icon + \")\"; //console.log(storageService.get(Keys.USER).icon.icon);\n\n    c.style.top = this.position.y + 'px';\n    c.style.left = this.position.x + 'px';\n  }\n\n  animateCharacter(mode) {\n    let c = this.character;\n\n    if (mode === 'show') {\n      c.classList.add('move');\n      let a = this.activeKeyX;\n\n      if (a === 37) {\n        c.classList.add('flip');\n      } else if (a === 39) {\n        c.classList.remove('flip');\n      }\n    } else if (mode === 'hide') {\n      c.classList.remove('move');\n    }\n  }\n\n  createControls() {\n    if (this.hasEvent === false) {\n      this.hasEvent = true;\n      let b = document.body;\n      b.addEventListener('keydown', e => {\n        if (e.keyCode === 38 && this.activeKeyY === null && this.onLand === true) {\n          this.activeKeyY = 38;\n          this.jumpSpeed = Math.floor(this.height * -0.6);\n        } else if ((e.keyCode === 37 || e.keyCode === 39) && this.activeKeyX === null) {\n          this.activeKeyX = e.keyCode;\n          this.animateCharacter('show');\n        }\n      });\n      b.addEventListener('keyup', e => {\n        if (e.keyCode === 37 || e.keyCode === 39) {\n          this.activeKeyX = null;\n          this.animateCharacter('hide');\n        } else if (e.keyCode === 38) {\n          this.activeKeyY = null;\n          this.jumpSpeed = 0;\n        }\n      });\n    }\n  }\n\n  createMap() {\n    let m = this.map;\n    let v = this.viewbox;\n    let s;\n\n    if (\"children\" in v) {\n      s = v.children;\n    }\n\n    let w = this.width;\n    let h = this.height;\n\n    for (let r of s) {\n      let d = r.children;\n      let i = +r.dataset.gameRow;\n\n      for (let c of d) {\n        let j = +c.dataset.gameCol;\n\n        if (m[i][j] === '#') {\n          c.classList.add('lawn');\n        } else if (m[i][j] === 'H') {\n          c.classList.add('ground');\n        } else if (m[i][j] === 'O') {\n          c.classList.add('finish');\n        } else if (m[i][j] === '*' || m[i][j] === 'L') {\n          c.classList.add('block');\n        } else if (m[i][j] === ' ') {\n          c.classList.add('space');\n        } else if (m[i][j] === 'S') {\n          this.position = {\n            x: j * w,\n            y: i * h\n          };\n        } else if (!isNaN(Number(m[i][j])) && m[i][j]) {\n          c.classList.add('lvl');\n        }\n      }\n    }\n  }\n\n  initializeCharacter() {\n    let i = this.position.y;\n    let j = this.position.x;\n    let c = this.character;\n    let u = this.charWidth;\n    c.classList.remove('hide');\n    this.renderCharacter();\n  }\n\n  render() {\n    let m = this;\n    let a = m.activeKeyX;\n    let x = m.position.x;\n    let y = m.position.y;\n    setTimeout(() => {\n      window.requestAnimationFrame(m.render.bind(m));\n    }, 1000 / m.fps);\n\n    if (a !== null) {\n      let u = m.charWidth;\n      let c = m.character;\n\n      if (this.won === false && this.dead === false) {\n        if (a === 37) {\n          m.moveCharacter(Math.floor(u * -0.15), 'l');\n        } else if (a === 39) {\n          m.moveCharacter(Math.floor(u * 0.15), 'r');\n        }\n      }\n    }\n\n    m.gravity();\n    m.viewbox.style.top = y > m.height * 9 ? m.height * -5 + 'px' : '0';\n    m.renderCharacter();\n  }\n\n  initialize() {\n    this.won = false;\n    this.dead = false;\n    this.viewbox.classList.add('active');\n\n    if (this.hasEvent === false) {\n      this.render();\n    }\n\n    this.createControls();\n    this.createMap();\n    this.initializeCharacter();\n  }\n\n}","map":{"version":3,"sources":["/home/ribolost/Documentos/Proyectos/table-mark/src/pages/tableGame/tableGame.tsx"],"names":["React","useEffect","StorageService","Keys","useHistory","FileDownloader","InitialMap","level","FooterComponent","storageService","rows","columns","TableGame","props","history","map","user","get","USER","icon","initializeGame","setTimeout","alert","console","log","push","PAGE_CREATE_USER","PAGE_LOGIN","file","b","document","body","character","getElementById","viewBox","querySelector","width","height","HTMLElement","offsetWidth","offsetHeight","fps","allowance","space","p","Math","floor","q","charWidth","mapTable","MAP","z","Game","IS_CHANGE_INPUT","row","AUX_SPAWN","r","column","c","changeSpawn","initialize","list","quarters","i","e","mapLs","beforeSpawn","SPAWN","JSON","parse","mapLS","saveMap","j","saveNewSpawn","set","constructor","viewbox","left","top","activeKeyX","activeKeyY","onLand","position","jumpSpeed","hasEvent","scroll","animation","won","dead","open","x","y","gameWin","inLevel","levelName","levelJson","selectorLevel","type","TYPE_ZIP","fileDownloader","TYPE_EDUCAPLAY","window","resource","TYPE_HTML","lvl","Number","pathname","PAGE_INPUT_SCORE","state","levels","lvlJson","forEach","changeLvl","collidable","o","collision","d","m","w","h","a","s","k","l","boxName","isNaN","moveCharacter","gravity","f","g","renderCharacter","style","backgroundImage","animateCharacter","mode","classList","add","remove","createControls","addEventListener","keyCode","createMap","v","children","dataset","gameRow","gameCol","initializeCharacter","u","render","requestAnimationFrame","bind"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport './tableGame.scss'\nimport {StorageService} from \"../../services/save.local.storage\";\nimport {Keys} from \"../../keys\";\nimport {useHistory} from \"react-router-dom\";\nimport {FileDownloader} from \"../../services/file.downloader.service\";\nimport {InitialMap} from \"./map\";\nimport level from '../../mocks/levels.json';\nimport {FooterComponent} from \"../../components/footer/footer.component\";\n\nconst storageService = new StorageService();\nconst rows = 10;\nconst columns = 23;\nexport const TableGame = (props: any) => {\n\n    const history = useHistory();\n    const storageService = new StorageService();\n    const map = new InitialMap();\n    useEffect(() => {\n        let user;\n        if (user = storageService.get(Keys.USER)) {\n            if (user.icon !== \"\") {\n                initializeGame();\n            } else {\n                setTimeout(() => {\n                    alert('No has elegido un autor, por favor elige uno.');\n                }, 1000);\n                console.log(\"No se ha elegido autor\");\n                history.push(Keys.PAGE_CREATE_USER);\n            }\n        } else {\n            setTimeout(() => {\n                alert('No has creado un usuario, por favor crea un usuario para jugar.');\n            }, 10);\n            console.log(\"No hay usuario\")\n            history.push(Keys.PAGE_LOGIN);\n        }\n    }, [])\n\n    const initializeGame = () => {\n        //map.saveInitialMap(); //comentar esta línea, pues se usa para cambios de mapa en pruebas.\n        let file = new FileDownloader();\n        //file.downloadFile('COMPRENSIONLECTORA_1.zip')\n        let b = document.body;\n        let character = document.getElementById('character');\n        let viewBox = document.querySelector('#viewbox');\n        let width;\n        let height;\n        if (character instanceof HTMLElement) {\n            width = character.offsetWidth;\n            height = character.offsetHeight;\n            let fps = 30;\n            let allowance = 6;\n            let space = 10;\n            let columns = 10;\n            let rows = 10;\n            let p = Math.floor(character.offsetWidth / columns);\n            let q = allowance * p;\n            let charWidth = width - q;\n            let mapTable = storageService.get(Keys.MAP);\n            let z = new Game(character, viewBox, mapTable, allowance, space, columns, rows,\n                charWidth, width, height, fps, history);\n            if (storageService.get(Keys.IS_CHANGE_INPUT)) {\n                let row = storageService.get(Keys.AUX_SPAWN).r;\n                let column = storageService.get(Keys.AUX_SPAWN).c;\n                z.changeSpawn(row, column);\n            } else if (storageService.get(Keys.IS_CHANGE_INPUT) !== null) {\n                setTimeout(() => {\n                    alert('No ingresó puntaje para el nivel.')\n                }, 1000);\n            }\n            z.initialize();\n        }\n    }\n\n    const list = () => {\n        let list: JSX.Element[] = [];\n        let quarters: JSX.Element[] = [];\n        for (let i = 0; i < rows; i++) {\n            quarters = [];\n            for (let e = 0; e < columns; e++) {\n                quarters.push(<div key={'s' + e + i} className=\"col\" data-game-col={e}></div>);\n            }\n            list.push(<div key={'s' + i} className=\"row\" data-game-row={i}>{quarters}</div>)\n        }\n        return list;\n    }\n\n\n    return <>\n        <div className=\"container-game\">\n            <div className=\"screen\" id=\"viewbox\">\n                {list()}\n                <div className=\"character hide\" id=\"character\">\n                </div>\n            </div>\n            <FooterComponent></FooterComponent>\n        </div>\n    </>\n}\n/**\n * change the spawn by the level coordinates\n * @param r row\n * @param c column\n */\nconst changeSpawn = (mapLs: any, r: number, c: number) => {\n    let beforeSpawn: any = storageService.get(Keys.SPAWN);\n    beforeSpawn = JSON.parse(beforeSpawn);\n    mapLS.saveMap(r, c, 'S');\n    mapLS.saveMap(beforeSpawn.i, beforeSpawn.j, ' ');\n    mapLS.saveNewSpawn(r, c);\n    storageService.set(Keys.IS_CHANGE_INPUT, false);\n}\n\nclass Game {\n    private character: HTMLElement;\n    private viewbox: Element | any;\n    private map: string[][];\n    private allowance: number;\n    private space: number;\n    private columns: number;\n    private rows: number;\n    private charWidth: number;\n    private width: number;\n    private height: number;\n    private fps: number;\n    private left: number;\n    private top: number;\n    private activeKeyX: any;\n    private activeKeyY: any;\n    private onLand: boolean;\n    private position: { x: number; y: number };\n    private jumpSpeed: number;\n    private hasEvent: boolean;\n    private scroll: number;\n    private animation: null;\n    private won: boolean;\n    private dead: boolean;\n    private history: any;\n    private open: boolean;\n    mapLS = new InitialMap();\n\n    constructor(character: HTMLElement, viewbox: Element | any, map: string[][], allowance: number, space: number,\n                columns: number, rows: number, charWidth: number, width: number, height: number, fps: number, history: any) {\n        this.character = character;\n        this.viewbox = viewbox;\n        this.map = map;\n        this.allowance = allowance;\n        this.space = space;\n        this.columns = columns;\n        this.rows = rows;\n        this.charWidth = charWidth;\n        this.width = width;\n        this.height = height;\n        this.fps = fps;\n        this.left = 0;\n        this.top = 0;\n        this.activeKeyX = null;\n        this.activeKeyY = null;\n        this.onLand = true;\n        this.position = {x: 0, y: 0};\n        this.jumpSpeed = 0;\n        this.hasEvent = false;\n        this.scroll = 0;\n        this.animation = null;\n        this.won = false;\n        this.dead = false;\n        this.history = history;\n        this.open = false;\n    }\n\n    gameWin() {\n        if (this.won === false) {\n            this.won = true;\n\n            setTimeout(() => {\n                alert('!Felicidades!\\nHaz logrado pasar todos los niveles.\\nTu puntaje final fue de ');\n            }, 1000);\n        }\n    }\n\n    /**\n     * What to do when the user is at the level.\n     * @param levelName\n     * @param row\n     * @param column\n     */\n    inLevel(levelName: any, row: number, column: number) {\n        if (this.dead === false) {\n            //this.character.classList.add('dead');\n            //this.dead = true;\n\n            //setTimeout(() => {\n            //    alert('Está entrando al nivel...');\n            //}, 1000);\n            //this.map;\n            let levelJson = this.selectorLevel(levelName);\n            if (!this.open) {\n                if (levelJson) {\n                    switch (levelJson.type) {\n                        case Keys.TYPE_ZIP:\n                            let fileDownloader = new FileDownloader();\n                            //fileDownloader.downloadFile(levelJson.resource);\n                            console.log(\"Es un ZIp\");\n                            break;\n                        case Keys.TYPE_EDUCAPLAY:\n                            window.open(levelJson.resource);\n                            console.log(\"Es una página externa\")\n                            break;\n                        case Keys.TYPE_HTML:\n                            break;\n                        default:\n                            console.log(\"Este tipo de juego no existe\");\n                            break;\n                    }\n                    let lvl = Number(levelName);\n                    this.history.push({\n                        pathname: Keys.PAGE_INPUT_SCORE,\n                        state: {level: lvl}\n                    });\n                    if (!storageService.get(Keys.IS_CHANGE_INPUT)) {\n                        storageService.set(Keys.AUX_SPAWN, {r: row, c: column});\n                    }\n                    this.open = true;\n                }\n            }\n        }\n    }\n\n\n    /**\n     * find and return the level in the levels json.\n     * @param levelName\n     */\n    selectorLevel(levelName: string) {\n        let levels = level;\n        let lvlJson: any;\n        levels.forEach((lvl) => {\n            if (lvl.level === levelName) {\n                lvlJson = lvl;\n            }\n        })\n        return lvlJson;\n    }\n\n    changeLvl() {\n        this.position.x += 38;\n    }\n\n    collidable(o: string) {\n        if (o === '*' || o === '#' || o === 'H') {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    collision(c: number, d: string) {\n        let x = this.position.x;\n        let y = this.position.y;\n        let m = this.map;\n        let w = this.width;\n        let h = this.height;\n        let a = this.allowance;\n        let s = this.space;\n        let i = 0;\n        let j = 0;\n        let k = 0;\n        let l = 0;\n\n        if (d === 'u') {\n            i = Math.floor((y + h - (s * 2) + 2 + c) / h);\n            k = Math.floor((y + h - (s * 2) + 2 + c) / h);\n        } else if (d === 'd') {\n            i = Math.floor((y + h + c) / h);\n            k = Math.floor((y + h + c) / h);\n        } else if (d === 'l') {\n            j = Math.floor((x + c + (a * 2)) / w);\n            l = Math.floor((x + c + (a * 2)) / w);\n        } else if (d === 'r') {\n            j = Math.floor((x + w + c - (a * 2)) / w);\n            l = Math.floor((x + w + c - (a * 2)) / w);\n        }\n\n        if (d === 'l' || d === 'r') {\n            i = Math.floor((y + h - (s * 2) + 2) / h);\n            k = Math.floor((y + h - 1) / h);\n        } else if (d === 'u' || d === 'd') {\n            j = Math.floor((x + (a * 2)) / w);\n            l = Math.floor((x + w - (a * 2) - 1) / w);\n        }\n        let boxName = m[i][j];\n        if (boxName === 'X') {\n            console.log(\"Hola\");\n            //this.inLevel(\"Tipo 1\", i, j);\n        }\n        if (!isNaN(Number(boxName)) && boxName !== ' ') {\n            this.inLevel(boxName, i, j);\n        }\n\n        try {\n            let o = boxName;\n            let p = m[k][l];\n\n\n            if (this.collidable(o) || this.collidable(p)) {\n                return {\n                    x: (j * w),\n                    y: (i * h)\n                };\n            } else if (o === 'O') {\n                this.gameWin();\n            } else {\n                return null;\n            }\n        } catch (e) {\n            return null;\n        }\n        return 0;\n    }\n\n    moveCharacter(d: number, e: string) {\n        let a = this.allowance;\n        let w = this.width;\n        let o: any;\n        o = this.collision(d, e);\n\n        if (o === null) {\n            this.position.x += Math.floor(d);\n        } else {\n            if (e === 'l') {\n                this.position.x = Math.floor(o.x) + w - (a * 2);\n            } else if (e === 'r') {\n                this.position.x = Math.floor(o.x) - w + (a * 2);\n            }\n        }\n    }\n\n    gravity() {\n        let h = this.height;\n        let s = this.space;\n        let f = Math.floor(h * 0.2);\n        let g = (this.jumpSpeed >= 0) ? f : this.jumpSpeed;\n        let p: any = this.collision(g, 'd');\n\n        if (p === null) {\n            this.onLand = false;\n\n            this.position.y += g;\n        } else {\n            this.position.y = p.y - h;\n            this.jumpSpeed = 0;\n            this.onLand = true;\n        }\n\n        if (this.activeKeyY !== null && g < 0) {\n            let o: any = this.collision(g, 'u');\n\n            if (o === null) {\n                this.jumpSpeed += (f / 2);\n            } else {\n                this.jumpSpeed = 0;\n                this.position.y = o.y + h - (s * 2) + 2;\n            }\n        }\n    }\n\n    renderCharacter() {\n        let c = this.character;\n        c.style.backgroundImage = \"url(\" + storageService.get(Keys.USER).icon.icon + \")\";\n        //console.log(storageService.get(Keys.USER).icon.icon);\n        c.style.top = this.position.y + 'px';\n        c.style.left = this.position.x + 'px';\n    }\n\n    animateCharacter(mode: string) {\n        let c = this.character;\n\n        if (mode === 'show') {\n            c.classList.add('move');\n\n            let a = this.activeKeyX;\n\n            if (a === 37) {\n                c.classList.add('flip');\n            } else if (a === 39) {\n                c.classList.remove('flip');\n            }\n        } else if (mode === 'hide') {\n            c.classList.remove('move');\n        }\n    }\n\n    createControls() {\n        if (this.hasEvent === false) {\n            this.hasEvent = true;\n\n            let b = document.body;\n\n            b.addEventListener('keydown', (e) => {\n                if (e.keyCode === 38 && this.activeKeyY === null && this.onLand === true) {\n                    this.activeKeyY = 38;\n                    this.jumpSpeed = Math.floor(this.height * -0.6);\n                } else if ((e.keyCode === 37 || e.keyCode === 39) && this.activeKeyX === null) {\n                    this.activeKeyX = e.keyCode;\n                    this.animateCharacter('show');\n                }\n            });\n\n            b.addEventListener('keyup', (e) => {\n                if (e.keyCode === 37 || e.keyCode === 39) {\n                    this.activeKeyX = null;\n\n                    this.animateCharacter('hide');\n                } else if (e.keyCode === 38) {\n                    this.activeKeyY = null;\n                    this.jumpSpeed = 0;\n                }\n            });\n        }\n    }\n\n    createMap() {\n        let m = this.map;\n        let v = this.viewbox;\n        let s;\n        if (\"children\" in v) {\n            s = v.children;\n        }\n        let w = this.width;\n        let h = this.height;\n\n        for (let r of s) {\n            let d = r.children;\n            let i = +r.dataset.gameRow;\n\n            for (let c of d) {\n                let j = +c.dataset.gameCol;\n\n                if (m[i][j] === '#') {\n                    c.classList.add('lawn');\n                } else if (m[i][j] === 'H') {\n                    c.classList.add('ground');\n                } else if (m[i][j] === 'O') {\n                    c.classList.add('finish');\n                } else if (m[i][j] === '*' || m[i][j] === 'L') {\n                    c.classList.add('block');\n                } else if (m[i][j] === ' ') {\n                    c.classList.add('space');\n                } else if (m[i][j] === 'S') {\n                    this.position = {x: j * w, y: i * h};\n                } else if (!isNaN(Number(m[i][j])) && m[i][j]) {\n                    c.classList.add('lvl');\n                }\n            }\n        }\n    }\n\n    initializeCharacter() {\n        let i = this.position.y;\n        let j = this.position.x;\n        let c = this.character;\n        let u = this.charWidth;\n\n        c.classList.remove('hide');\n\n        this.renderCharacter();\n    }\n\n    render() {\n        let m = this;\n        let a = m.activeKeyX;\n        let x = m.position.x;\n        let y = m.position.y;\n\n        setTimeout(() => {\n            window.requestAnimationFrame(m.render.bind(m));\n        }, 1000 / m.fps);\n\n        if (a !== null) {\n            let u = m.charWidth;\n            let c = m.character;\n\n            if (this.won === false && this.dead === false) {\n                if (a === 37) {\n                    m.moveCharacter(Math.floor(u * -0.15), 'l');\n                } else if (a === 39) {\n                    m.moveCharacter(Math.floor(u * 0.15), 'r');\n                }\n            }\n        }\n\n        m.gravity();\n\n        m.viewbox.style.top = (y > (m.height * 9)) ? ((m.height * -5) + 'px') : '0';\n\n        m.renderCharacter();\n    }\n\n    initialize() {\n        this.won = false;\n        this.dead = false;\n\n        this.viewbox.classList.add('active');\n\n        if (this.hasEvent === false) {\n            this.render();\n        }\n\n        this.createControls();\n        this.createMap();\n        this.initializeCharacter();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}